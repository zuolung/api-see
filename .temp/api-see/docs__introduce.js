export default {
      tile: `api-see是什么？`,
      docs: `<h1>api-see 是什么？</h1>
<p><code>api-see</code> 是日常开发中接口的效率化工具。</p>
<div class="card"><h3 id=""><svg viewBox="0 0 1024 1024"  width="14" height="14"><path d="M491.054545 779.636364l-125.672727 125.672727c-32.581818 32.581818-76.8 51.2-123.345454 51.2s-90.763636-18.618182-123.345455-51.2c-67.490909-67.490909-67.490909-179.2 0-246.690909l223.418182-223.418182c32.581818-32.581818 76.8-51.2 123.345454-51.2s90.763636 18.618182 123.345455 51.2c13.963636 13.963636 34.909091 13.963636 46.545455 0 13.963636-13.963636 13.963636-34.909091 0-46.545455-93.090909-93.090909-246.690909-93.090909-342.109091 0L69.818182 612.072727c-46.545455 46.545455-69.818182 107.054545-69.818182 169.890909C0 847.127273 25.6 907.636364 69.818182 954.181818c46.545455 46.545455 109.381818 69.818182 169.890909 69.818182 62.836364 0 123.345455-23.272727 169.890909-69.818182l125.672727-125.672727c13.963636-13.963636 13.963636-34.909091 0-46.545455-9.309091-16.290909-30.254545-16.290909-44.218182-2.327272z" p-id="2808"></path><path d="M954.181818 69.818182c-93.090909-93.090909-246.690909-93.090909-342.109091 0l-125.672727 125.672727c-13.963636 13.963636-13.963636 34.909091 0 46.545455 13.963636 13.963636 34.909091 13.963636 46.545455 0L658.618182 116.363636c32.581818-32.581818 76.8-51.2 123.345454-51.2s90.763636 18.618182 123.345455 51.2c67.490909 67.490909 67.490909 179.2 0 246.690909l-223.418182 223.418182c-32.581818 32.581818-76.8 51.2-123.345454 51.2s-90.763636-18.618182-123.345455-51.2c-13.963636-13.963636-34.909091-13.963636-46.545455 0-13.963636 13.963636-13.963636 34.909091 0 46.545455 46.545455 46.545455 109.381818 69.818182 169.89091 69.818182 62.836364 0 123.345455-23.272727 169.890909-69.818182l223.418181-223.418182c46.545455-46.545455 69.818182-107.054545 69.818182-169.890909C1024 176.872727 998.4 116.363636 954.181818 69.818182z" p-id="2809"></path></svg></h3>
<p><img src="https://raw.githubusercontent.com/zuolung/api-ui-demo/main/theme.png" alt="image"></p>
<ul>
<li>代码自动化转化为接口文档，代码和文档完全保持一致</li>
<li>自动生成请求方法</li>
<li>本地生成 mock 服务，提升联调效率</li>
<li>根据后端 swagger 文档生成接口请求字段类型</li>
</ul>
</div><div class="card"><h3 id="%E5%AE%89%E8%A3%85"><svg viewBox="0 0 1024 1024"  width="14" height="14"><path d="M491.054545 779.636364l-125.672727 125.672727c-32.581818 32.581818-76.8 51.2-123.345454 51.2s-90.763636-18.618182-123.345455-51.2c-67.490909-67.490909-67.490909-179.2 0-246.690909l223.418182-223.418182c32.581818-32.581818 76.8-51.2 123.345454-51.2s90.763636 18.618182 123.345455 51.2c13.963636 13.963636 34.909091 13.963636 46.545455 0 13.963636-13.963636 13.963636-34.909091 0-46.545455-93.090909-93.090909-246.690909-93.090909-342.109091 0L69.818182 612.072727c-46.545455 46.545455-69.818182 107.054545-69.818182 169.890909C0 847.127273 25.6 907.636364 69.818182 954.181818c46.545455 46.545455 109.381818 69.818182 169.890909 69.818182 62.836364 0 123.345455-23.272727 169.890909-69.818182l125.672727-125.672727c13.963636-13.963636 13.963636-34.909091 0-46.545455-9.309091-16.290909-30.254545-16.290909-44.218182-2.327272z" p-id="2808"></path><path d="M954.181818 69.818182c-93.090909-93.090909-246.690909-93.090909-342.109091 0l-125.672727 125.672727c-13.963636 13.963636-13.963636 34.909091 0 46.545455 13.963636 13.963636 34.909091 13.963636 46.545455 0L658.618182 116.363636c32.581818-32.581818 76.8-51.2 123.345454-51.2s90.763636 18.618182 123.345455 51.2c67.490909 67.490909 67.490909 179.2 0 246.690909l-223.418182 223.418182c-32.581818 32.581818-76.8 51.2-123.345454 51.2s-90.763636-18.618182-123.345455-51.2c-13.963636-13.963636-34.909091-13.963636-46.545455 0-13.963636 13.963636-13.963636 34.909091 0 46.545455 46.545455 46.545455 109.381818 69.818182 169.89091 69.818182 62.836364 0 123.345455-23.272727 169.890909-69.818182l223.418181-223.418182c46.545455-46.545455 69.818182-107.054545 69.818182-169.890909C1024 176.872727 998.4 116.363636 954.181818 69.818182z" p-id="2809"></path></svg>安装</h3>
<div class="code-box-max">
<div class="copy-code-btn"></div>
<pre><code>yarn add api-see
</code></pre>
</div>
<p>接口定义的方案可以分为 <code>前端ts文件定义接口</code> 和 <code>后端swagger定义接口</code>, 通过<code>api-see</code>工具我们可以快速实现代码自动化 和数据自动化</p>
</div><div class="card"><h3 id="%E5%BF%AB%E9%80%9F%E5%BC%80%E5%A7%8B"><svg viewBox="0 0 1024 1024"  width="14" height="14"><path d="M491.054545 779.636364l-125.672727 125.672727c-32.581818 32.581818-76.8 51.2-123.345454 51.2s-90.763636-18.618182-123.345455-51.2c-67.490909-67.490909-67.490909-179.2 0-246.690909l223.418182-223.418182c32.581818-32.581818 76.8-51.2 123.345454-51.2s90.763636 18.618182 123.345455 51.2c13.963636 13.963636 34.909091 13.963636 46.545455 0 13.963636-13.963636 13.963636-34.909091 0-46.545455-93.090909-93.090909-246.690909-93.090909-342.109091 0L69.818182 612.072727c-46.545455 46.545455-69.818182 107.054545-69.818182 169.890909C0 847.127273 25.6 907.636364 69.818182 954.181818c46.545455 46.545455 109.381818 69.818182 169.890909 69.818182 62.836364 0 123.345455-23.272727 169.890909-69.818182l125.672727-125.672727c13.963636-13.963636 13.963636-34.909091 0-46.545455-9.309091-16.290909-30.254545-16.290909-44.218182-2.327272z" p-id="2808"></path><path d="M954.181818 69.818182c-93.090909-93.090909-246.690909-93.090909-342.109091 0l-125.672727 125.672727c-13.963636 13.963636-13.963636 34.909091 0 46.545455 13.963636 13.963636 34.909091 13.963636 46.545455 0L658.618182 116.363636c32.581818-32.581818 76.8-51.2 123.345454-51.2s90.763636 18.618182 123.345455 51.2c67.490909 67.490909 67.490909 179.2 0 246.690909l-223.418182 223.418182c-32.581818 32.581818-76.8 51.2-123.345454 51.2s-90.763636-18.618182-123.345455-51.2c-13.963636-13.963636-34.909091-13.963636-46.545455 0-13.963636 13.963636-13.963636 34.909091 0 46.545455 46.545455 46.545455 109.381818 69.818182 169.89091 69.818182 62.836364 0 123.345455-23.272727 169.890909-69.818182l223.418181-223.418182c46.545455-46.545455 69.818182-107.054545 69.818182-169.890909C1024 176.872727 998.4 116.363636 954.181818 69.818182z" p-id="2809"></path></svg>快速开始</h3>
<h5>前端 ts 文件定义接口</h5>
<ul>
<li><code>api-see watch</code>: 监听请求字段类型文件，生成 描述接口文档 的数据，<code>server</code>本地文档服务,<code>mock</code>开启 mock 服务, <code>action</code>根据请求字段类型生成请求方法</li>
<li><code>api-see build</code>: 接口文档单独打包</li>
<li><code>api-see file</code>: 执行一次生成 描述接口文档 的数据, 应用场景：1.刚拉取业务项目初始化、2.仅想重新生成一次请求方法</li>
</ul>
<div class="code-box-max">
<div class="copy-code-btn"></div>
<pre><code class="language-json"><span class="hljs-punctuation">{</span>
  <span class="hljs-attr">&quot;scripts&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">{</span>
    <span class="hljs-comment">// ...</span>
    <span class="hljs-attr">&quot;api:watch&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;api-see watch --path ./src/actions/types --server true --mock true --action true&quot;</span><span class="hljs-punctuation">,</span>
    <span class="hljs-attr">&quot;api:build&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;api-see build --path ./src/actions/types&quot;</span><span class="hljs-punctuation">,</span>
    <span class="hljs-attr">&quot;api:file&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;api-see file --path ./src/actions/types --action true&quot;</span><span class="hljs-punctuation">,</span>
    <span class="hljs-attr">&quot;build&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;yarn build &amp; yarn api:build&quot;</span>
  <span class="hljs-punctuation">}</span>
<span class="hljs-punctuation">}</span>
</code></pre>
</div>
<p>接口文档单独打包<code>yarn build</code>, nginx 静态服务的情况下，建议通过<code>buildPath</code>配置打包的目录结构如下</p>
<div class="code-box-max">
<div class="copy-code-btn"></div>
<pre><code><span class="hljs-bullet">-</span> build （项目打包文件）
<span class="hljs-bullet">  -</span> index.html
  ......
<span class="hljs-bullet">  -</span> api-see (api-see打包的结果，可以通过配置文件配置打包路径)
</code></pre>
</div>
<h5>服务端 swagger 定义接口</h5>
<ul>
<li><code>api-see swagger</code>: 生成请求字段类型和请求方法</li>
<li><code>api-see:xxx</code>: 只生成xxx服务的请求类型和方法</li>
</ul>
<div class="code-box-max">
<div class="copy-code-btn"></div>
<pre><code class="language-json"><span class="hljs-punctuation">{</span>
  <span class="hljs-attr">&quot;scripts&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">{</span>
    <span class="hljs-attr">&quot;swagger&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;api-see swagger --dir ./src/actions&quot;</span><span class="hljs-punctuation">,</span>
    <span class="hljs-attr">&quot;swagger:xxx&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;api-see swagger --service-name xxx&quot;</span>
  <span class="hljs-punctuation">}</span>
<span class="hljs-punctuation">}</span>
</code></pre>
</div>
</div>`,
      h3Ids: `:::安装:::快速开始`,
      codePath: []
    }